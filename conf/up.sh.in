#!/bin/bash

TUNTAP=$(basename $DEV)
echo $TUNTAP > @VARRUN@/chilli_tunname
. @SYSCONFDIR@/chilli/functions

ipt() {
	opt=$1; shift
	echo "iptables -w $opt $*" >> @VARRUN@/chilli.${TUNTAP}-do.sh
	echo "iptables -w -D $*" >> @VARRUN@/chilli.${TUNTAP}-undo.sh
}

ipt_in() {
	ipt -A input_rule -i $TUNTAP $*
}

run_up() {
	if [[ -n $TUNTAP ]]
	then
		if [[ -n $KNAME ]]
		then
			ifconfig $DHCPIF $ADDR netmask $MASK
			ifconfig $TUNTAP 0.0.0.0 down
			ifconfig $DHCPIF -promisc
			ipset -q create passthrough hash:ip
			ipset -q flush passthrough

			ipt -A FORWARD -t mangle -i $DHCPIF -m comment --comment "'Mark packets LAN->WAN with src address for tc filter'" -j IPMARK --addr=src
			ipt -A FORWARD -t mangle -o $DHCPIF -m comment --comment "'Mark packets WAN->LAN with dst address for tc filter'" -j IPMARK --addr=dst
			ipt -A forwarding_rule -i $DHCPIF -m set --match-set passthrough dst -m comment --comment "'Allow LAN->passthrough'" -j ACCEPT
			ipt -A forwarding_rule -o $DHCPIF -m set --match-set passthrough src -m comment --comment "'Allow passthrough->LAN'" -j ACCEPT
			ipt -A forwarding_rule -i $DHCPIF -m coova -m comment --comment "'Allow authenticated clients LAN->WAN'" -j ACCEPT
			ipt -A forwarding_rule -o $DHCPIF -m coova --dest -m comment --comment "'Allow authenticated clients WAN->LAN'" -j ACCEPT
			ipt -A prerouting_lan_rule -t nat -p tcp --dport 80 -m set ! --match-set passthrough dst -m coova ! --checkclient \
				-m comment --comment "'Redirect port 80 for non-passthrough, non-authenticated to UAM'" -j REDIRECT --to-ports $UAMPORT

			ipset add passthrough $ADDR
			for pt in ${HS_UAMALLOW//,/ }; do
				if [[ $pt =~ ([0-9]+\.)+[0-9]+ ]]; then
					ipset -q add passthrough $pt
				else
					for ip in $(name2ip $pt); do
						ipset -q add passthrough $ip
					done
				fi
			done
		else
			ifconfig $TUNTAP txqueuelen 1000
			if type -p tc &> /dev/null; then
				tc qdisc add dev $TUNTAP parent root sfq perturb 10 headdrop
			fi

			if [[ $LAYER3 == 0 ]]; then
				[[ -n $UAMPORT ]] && [[ $UAMPORT != 0 ]] && \
					ipt_in -p tcp --dport $UAMPORT -d $ADDR -j ACCEPT
				[[ -n $UAMUIPORT ]] && [[ $UAMUIPORT != 0 ]] && \
					ipt_in -p tcp --dport $UAMUIPORT -d $ADDR -j ACCEPT

				if [[ -n $HS_TCP_PORTS ]]; then
					for port in $HS_TCP_PORTS; do
						ipt_in -p tcp --dport $port -d $ADDR -j ACCEPT
					done
				fi

				if [[ -n $HS_UDP_PORTS ]]; then
					for port in $HS_UDP_PORTS; do
						ipt_in -p udp -p udp --dport $port --dst $ADDR -j ACCEPT
					done
				fi

				ipt_in -p udp -d 255.255.255.255 --destination-port 67:68 -j ACCEPT
				ipt_in -p udp -d $ADDR --destination-port 67:68 -j ACCEPT
				ipt_in -p udp --dst $ADDR --dport 53 -j ACCEPT
				ipt_in -p icmp --dst $ADDR -j ACCEPT
				ipt_in -d $ADDR -j DROP

				if [[ $ONLY8021Q != 1 ]]; then
					ipt -A input_rule -i $DHCPIF -j DROP
				fi
			fi

			if [[ $ONLY8021Q != 1 ]]; then
				ipt -A forwarding_rule -i $DHCPIF -j DROP
				ipt -A forwarding_rule -o $DHCPIF -j DROP
			fi

			ipt -I forwarding_rule -i $TUNTAP -j ACCEPT
			ipt -I forwarding_rule -o $TUNTAP -j ACCEPT

			# Help out conntrack to not get confused
			# (stops masquerading from working)
			ipt -I PREROUTING -t raw -j NOTRACK -i $DHCPIF
			ipt -I OUTPUT -t raw -j NOTRACK -o $DHCPIF

			for wan_if in $HS_WANIF; do
				[[ $HS_LAN_ACCESS =~ on|allow ]] || \
					ipt -I FORWARD -i $TUNTAP \! -o $wan_if -j DROP
				ipt -I FORWARD -i $TUNTAP -o $wan_if -j ACCEPT
			done
		fi

		if [[ $HS_LOCAL_DNS == on ]]; then
			ipt -A prerouting_lan_rule -t nat -p udp --dport 53 -m comment --comment "'Rewrite DNS to self'" -j REDIRECT
			ipt -A prerouting_lan_rule -t nat -p tcp --dport 53 -m comment --comment "'Rewrite DNS to self'" -j REDIRECT
		fi

		ipt -A prerouting_lan_rule -t nat -d $ADDR -p tcp --dport 80 -m comment --comment "'Rewrite packets to self port 80 on LAN to UAM'" -j REDIRECT --to-ports $UAMPORT
		/etc/init.d/firewall restart
	fi
}

run_up
