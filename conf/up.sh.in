#!/bin/bash

TUNTAP=$(basename $DEV)
echo $TUNTAP > @VARRUN@/chilli_tunname
. @SYSCONFDIR@/chilli/functions

ipt() {
	opt=$1; shift
	echo "iptables -w $opt $*" >> @VARRUN@/chilli.${TUNTAP}-do.sh
	echo "iptables -w -D $*" >> @VARRUN@/chilli.${TUNTAP}-undo.sh
}

ipt_in() {
	ipt -I INPUT -i $TUNTAP $*
}

run_up() {
	if [[ -n $TUNTAP ]]
	then
		ifconfig $TUNTAP txqueuelen 1000
		if type -p tc &> /dev/null; then
			tc qdisc add dev $TUNTAP parent root sfq perturb 10 headdrop
		fi
		if [[ -n $KNAME ]]
		then
			ifconfig $DHCPIF $ADDR netmask $MASK
			ifconfig $TUNTAP 0.0.0.0

			local PT=${HS_UAMALLOW//,/ }
			for pt in $PT; do
				if [[ $pt =~ ([0-9]+\.)+[0-9]+ ]]; then
					ipset -q -! add passthrough $pt
				else
					for ip in $(nslookup $pt | awk '/Name/ { print_addr=1 }
						/Address [0-9]+: ([0-9]+\.)+[0-9]+/ {
							if(print_addr)
								print $3
						}')
					do
						ipset -q -! add passthrough $ip
					done
				fi
			done

			# order matters here -
			# coova rule should be on the top so that
			# garden accounting works
			ipt -I FORWARD -m set --match-set passthrough src -j ACCEPT
			ipt -I FORWARD -m set --match-set passthrough dst -j ACCEPT
			ipt -I FORWARD -i $DHCPIF -m coova --name $KNAME -j ACCEPT
			ipt -I FORWARD -o $DHCPIF -m coova --name $KNAME --dest -j ACCEPT

			# for bandwidth control using tc filters
			for wan_if in $HS_WANIF; do
				ipt -I FORWARD -t mangle -i $DHCPIF -o $wan_if -j IPMARK --addr=src
				ipt -I FORWARD -t mangle -i $wan_if -o $DHCPIF -j IPMARK --addr=dst
			done

			# for redirection
			ipt -I PREROUTING -t nat -i $DHCPIF -p tcp --dport 80 -m set ! --match-set passthrough dst -m set ! --match-set authenticated src -j DNAT --to $ADDR:$UAMPORT
		else
			if [ "$LAYER3" != "1" ]
			then
				[ -n "$UAMPORT" -a "$UAMPORT" != "0" ] && \
					ipt_in -p tcp -m tcp --dport $UAMPORT --dst $ADDR -j ACCEPT

				[ -n "$UAMUIPORT" -a "$UAMUIPORT" != "0" ] && \
					ipt_in -p tcp -m tcp --dport $UAMUIPORT --dst $ADDR -j ACCEPT

				[ -n "$HS_TCP_PORTS" ] && {
					for port in $HS_TCP_PORTS; do
						ipt_in -p tcp -m tcp --dport $port --dst $ADDR -j ACCEPT
					done
				}

				[ -n "$HS_UDP_PORTS" ] && {
					for port in $HS_UDP_PORTS; do
						ipt_in -p udp -p udp --dport $port --dst $ADDR -j ACCEPT
					done
				}

				ipt_in -p udp -d 255.255.255.255 --destination-port 67:68 -j ACCEPT
				ipt_in -p udp -d $ADDR --destination-port 67:68 -j ACCEPT
				ipt_in -p udp --dst $ADDR --dport 53 -j ACCEPT
				ipt_in -p icmp --dst $ADDR -j ACCEPT
				ipt -A INPUT -i $TUNTAP --dst $ADDR -j DROP

				if [ "$ONLY8021Q" != "1" ]
				then
					ipt -I INPUT -i $DHCPIF -j DROP
				fi
			fi

			if [ "$ONLY8021Q" != "1" ]
			then
				ipt -I FORWARD -i $DHCPIF -j DROP
				ipt -I FORWARD -o $DHCPIF -j DROP
			fi

			ipt -I FORWARD -i $TUNTAP -j ACCEPT
			ipt -I FORWARD -o $TUNTAP -j ACCEPT

			# Help out conntrack to not get confused
			# (stops masquerading from working)
			ipt -I PREROUTING -t raw -j NOTRACK -i $DHCPIF
			ipt -I OUTPUT -t raw -j NOTRACK -o $DHCPIF

			for wan_if in $HS_WANIF; do
				[ "$HS_LAN_ACCESS" != "on" -a "$HS_LAN_ACCESS" != "allow" ] && \
					ipt -I FORWARD -i $TUNTAP \! -o $wan_if -j DROP
				ipt -I FORWARD -i $TUNTAP -o $wan_if -j ACCEPT
			done
		fi

		# if KNAME is set, use DHCPIF otherwise use TUNTAP
		local lanIf=${KNAME:+$DHCPIF}

		[ "$HS_LOCAL_DNS" == "on" ] && {
			ipt -I PREROUTING -t nat -i ${lanIf:-$TUNTAP} -p udp --dport 53 -j DNAT --to-destination $ADDR
			ipt -I PREROUTING -t nat -i ${lanIf:-$TUNTAP} -p tcp --dport 53 -j DNAT --to-destination $ADDR
		}

		# redirect port 80 requests to self to UAMPORT
		ipt -I PREROUTING -t nat -i ${lanIf:-$TUNTAP} -d $ADDR -p tcp --dport 80 -j DNAT --to-destination $ADDR:$UAMPORT
	fi
}

run_up
